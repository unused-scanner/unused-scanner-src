#!/usr/bin/env php
<?php

$VERSION = '2.4.0';

if (file_exists(__DIR__ . '/vendor/autoload.php')) {
    require __DIR__ . '/vendor/autoload.php';
} else {
    require __DIR__ . '/../../autoload.php';
}

use UnusedScanner\Lib\Runner;

$defaultConfigPath = getcwd() . DIRECTORY_SEPARATOR . 'scanner_config.php';
$optIndex = null;

if ($argc > 1 && strpos($argv[1] ?? '', '-') !== 0) {
    $configPath = $argv[1];
    $args = array_slice($argv, 1);
    $silentMode = in_array('-s', $args, true) || in_array('--silent', $args, true);
    $showVersion = in_array('--version', $args, true);
} else {
    $options = getopt('s', ['silent', 'version'], $optIndex);
    $configPath = (int)$optIndex < $argc && $argc > 1 ? array_slice($argv, $optIndex)[0] : null;
    $silentMode = isset($options['s']) || isset($options['silent']);
    $showVersion = isset($options['version']);
}

if ($showVersion) {
    echo $VERSION . PHP_EOL;
    exit(Runner::SUCCESS_CODE);
}

if (!$configPath && file_exists($defaultConfigPath)) {
    $configPath = $defaultConfigPath;
    echo 'Default detected config will be used at ' . $defaultConfigPath . PHP_EOL;
}
if (!$configPath) {
    echo 'Missing required argument - path to config' . PHP_EOL;
    exit(Runner::ARGUMENT_ERROR_CODE);
}

if (!file_exists($configPath)) {
    echo 'Configuration file "' . $configPath . '" not found' . PHP_EOL;
    exit(Runner::ARGUMENT_ERROR_CODE);
}

$exitCode = (new Runner((string)$configPath, $silentMode))->run();

exit($exitCode);
